# Visualization Fundamentals {#sec-tasks-vis}

```{r}
#| echo: false
library(knitr)
library(kableExtra)
library(fontawesome)
```


By the end of this *Task* you should be able to:

::: {.callout-note icon=false}

## Task outcomes

- [x] Formally describe data graphics according to their visual encoding.
- [x] Reproduce graphics by writing ggplot2 specifications.
- [x] Combine `dplyr` and conditional statements to prep data for plotting.
:::

## Introduction

This task requires you to apply the concepts and skills developed in the chapter on visualization fundamentals.

## Component 1: Describe and evaluate


```{r}
#| label: fig-spoke-map
#| fig-cap: "Map of Butler Con-Lab Swing in 2019 General Election."
#| echo: false

include_graphics("/figs/spoke-map.png", error = FALSE)
```

Complete the description table below identifying each *data item* that is encoded along with its *measurement level*, *visual mark* and *visual channel*  and the effectiveness rank, according to @munzner_visualization_2014, of this encoding.

| Data item      | Measurement level | Visual mark      | Visual channel  | Rank         |
|----------------|-------------------|------------------|-----------------|--------------|
| `location`     | <enter here>      |  <enter here>    | <enter here>    | <enter here> |
| `...`          |`...`              |  `...`           | `...`           | `...`        |
| `...`          |`...`              |  `...`           | `...`           | `...`        |
| `...`          |`...`              |  `...`           | `...`           | `...`        |
| `...`          |`...`              |  `...`           | `...`           | `...`        |
| `...`          |`...`              |  `...`           | `...`           | `...`        |



## Component 2: Reproduce

Write some code for reproducing something similar to the graphic below -- a set of histograms of the Swing variable, faceted by region. Place your code into the [03-template.Rmd]() file for this session.

```{r}
#| eval: false
#| echo: true
#######################
# Enter your code in the chunk provided.
######################
```

* Save your plot as a `.png` file and insert the file as a Figure into your `.Rmd` document ([guidance here](https://rmd4sci.njtierney.com/figures-tables-captions-.html)).

```{r}
#| label: fig-hist-region
#| fig-cap: "Histograms of Swing variable, grouped by region."
#| echo: false
#| eval: true


include_graphics("/figs/hist-region.png", error = FALSE)
```

### Scatterplots with multiple encodings

Write some code for reproducing something similar to the graphic below -- a scatterplot comparing 2017 and 2019 vote shares for Labour. Be sure to include *every* encoding as it appears in the graphic (e.g. `shape` and `alpha` according to whether constituencies flipped allegiance). Hint: you may need to use a *conditional statement* to generate a variable for emphasising constituencies that flipped parties between 2017 and 2019. Place your code into the [03-template.Rmd]() file for this session.

```{r}
#| eval: false
#| echo: true

#######################
# Enter your code in the chunk provided.
######################
```

* Save your plot as a `.png` file and insert the file as a Figure into your `.Rmd` document ([guidance here](https://rmd4sci.njtierney.com/figures-tables-captions-.html)).


```{r}
#| label: fig-scatters-lab
#| fig-cap: "Plots of 2019 versus 2017 vote shares."
#| echo: false
#| eval: true

include_graphics("/figs/scatters-lab.png", error = FALSE)
```
## Component 3: Create a map

Write some code for reproducing something similar to the graphic below -- a map of the estimated Leave:Remain vote margin by Parliamentary Constituency. Note the [diverging](https://colorbrewer2.org/#type=diverging&scheme=BrBG&n=3) colour scheme here to distinguish whether the Constituency was majority Leave and Remain  -- brown or green -- and also the *size* of that majority -- the darker the colour, the larger the majority.

 Place your code into the [ 03-template.Rmd]() file for this session.

```{r}
#| eval: false
#| echo: true
#######################
# Enter your code in the chunk provided.
######################
```

* Save your plot as a `.png` file and insert the file as a Figure into your `.Rmd` document ([guidance here](https://rmd4sci.njtierney.com/figures-tables-captions-.html)).


```{r}
#| label: fig-referendum-map
#| fig-cap: "Map of 2016 EU Referendum vote, estimated by Parliamentary Constituency in GB."
#| echo: false
#| eval: true


include_graphics("/figs/referendum-map.png", error = FALSE)
```
