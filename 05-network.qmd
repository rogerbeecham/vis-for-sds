# Networks {#sec-network}

```{r}
#| echo: false
library(knitr)
library(kableExtra)
library(fontawesome)
```

By the end of this chapter you should gain the following knowledge and practical skills.

::: {.callout-note}

## Knowledge

- [x] The special structure and vocabulary used to represent network data.
- [x] The strengths, weaknesses and trade-offs of network visualizations and of incorporating geographic context.

:::


::: {.callout-note}

## Practical skills

- [x] Write `ggplot2` specifications that use containment to analyse spatial network origin-destination data.

:::

## Introduction

Networks are a special class of data used to represent things (entities) and how they relate to one another. Network data consist of two types of element: *nodes*, the entities themselves, and *edges*, the connections between nodes. Both nodes and edges can have additional information attached to them -- counts, categories and directions. Network data are cumbersome to work with in R as they are not represented well  by flat data frames. A common workflow is to split the data across two tables -- one representing nodes and one representing edges [@wickham_ggplot2_2020].

A category of network data used heavily in geospatial analysis is origin-destination (OD) data describing, for example, flows of bikes [@beecham_connected_2023] and commuters [@beecham_characterising_2019] around a city, or [water](https://public.tableau.com/profile/robradburn#!/vizhome/LiquidCapital/VirtualWater) around a country. These data consist of *nodes*, origin and destination locations, and *edges*, flows linking those origins and destinations. Whilst statistics from [Network Science](https://en.wikipedia.org/wiki/Network_science) can and have been deployed in the analysis of geospatial OD data, visualization techniques provide much assistance in exposing the types of complex structural patterns and relations that result from locating OD flow data within geographic context.

In this chapter we will work with an accessible and widely used origin-destination network dataset: Census travel-to-work data. This records counts of individuals commuting between locations ([census geographies](https://www.ons.gov.uk/methodology/geography/ukgeographies/censusgeography#census-geography)) of the UK.


## Concepts

### Network data: nodes and edges

This chapter introduces techniques for visually representing networks and evaluates their usefulness through an analysis of 2011 Census OD travel-to-work data.  It does so using Census travel-to-work data in London. The *nodes* in this dataset are London's 33 boroughs and the *edges* are directed OD pairs between these boroughs.

```{r nodes-data, echo=FALSE, out.width="50%"}
data <- tibble::tibble(
  "borough" = c("Barking and Dagenham", "Barnet", "Bexley", "..."),
  "out" = c("54237", "117657", "77263", "..."),
  "in" = c("33605", "72024", "39232", "...")
  )
kbl(data,  caption = "Nodes table: London Boroughs.", escape = FALSE) |> kable_minimal()
```


```{r edges-data, echo=FALSE, out.width="50%"}
data <- tibble::tibble(
  "origin" = c("Barking and Dagenham", "Barking and Dagenham", "Barking and Dagenham", "..."),
  "destination" = c("Barking and Dagenham", "Barnet", "Bexley", "..."),
  "freq" = c("14650", "280", "155", "...")
  )
kbl(data,  caption = "Edges table: OD pairs between London Boroughs.", escape = FALSE) |> kable_minimal()
```

In Figure \@ref(fig:flows-bor), frequencies of the number of *jobs* available in each borough and *workers* living in each borough (the nodes) are represented. Note that job-rich boroughs in central London -- Westminster, City of London, Camden, Tower Hamlets -- contain many more *jobs* than *workers* residing in them. We can therefore infer that there is likely to be a high level of in-commuting to those boroughs and the corollary, a high level of out-commuting for boroughs containing large numbers of *workers* but comparatively fewer *jobs*. 


### Node-link representations

Perhaps the most common class of network visualization tha could be used to represent the data in  @tbl-nodes-data and @tbl-edges-data are node-link diagrams. These depict graphs in two dimensions as a force-directed layout. Nodes are positioned such that those sharing greater connection -- edges with greater weights (frequencies) -- are closer than those that are less well-connected -- that do not share edges with such large weights. Edges are drawn as lines *connecting* nodes.


## Techniques
